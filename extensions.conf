; Internal Context: Handles internal calls
[internal]
exten => _XXX,1,NoOp(Calling ${EXTEN}); Log internal call
same => n,Set(CALLFILENAME=${UNIQUEID})
same => n,MixMonitor(/var/spool/asterisk/recording/${CALLFILENAME}.wav)
same => n,Dial(SIP/${EXTEN},30)
same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy:unavail)
same => n(unavail),Hangup()
same => n(busy),VoiceMail(${EXTEN},b)
same => n,Hangup()

; For calling voicemail, prepend with *
exten => _*XXX,1,VoiceMailMain(${EXTEN:1},s) ; Access voicemail by dialing * followed by extension

; Extension for calling external numbers
exten => _XXXXXXXX,1,Set(CALLFILENAME=${UNIQUEID})
same => n,MixMonitor(/var/spool/asterisk/recording/${CALLFILENAME}.wav)
same => n,Goto(outgoing,${EXTEN},1) ; Redirect to outgoing context for external calls

; Support Team Context: Manages support team calls
[SupportTeam]
exten => _X.,1,NoOp(Support Team) ; Log support call
same => n,Set(CALLFILENAME=${UNIQUEID})
same => n,MixMonitor(/var/spool/asterisk/recording/${CALLFILENAME}.wav)
same => n,Answer() ; Answer the call
same => n,Queue(support,,,,30,) ; Queue the call for support team
same => n,Hangup() ; Hang up after queue timeout

; Condition Work Time: Handles calls based on work hours
[timecheck]
exten => s,1,GotoIfTime(8:00-18:00,mon-fri,*,*?ok,1) ; Check if it's work hours on weekdays
same => n,GotoIfTime(8:00-14:00,sat-sat,*,*?ok,1) ; Check if it's work hours on Saturday
same => n,Playback(tt-monkeys) ; Play message if outside of work hours
same => n,Hangup() ; Hang up after playing message

exten => ok,1,Return ; Return from subroutine

; Extension for handling inbound external calls
[incoming]
exten => 39100200,1,GoSub(timecheck,s,1) ; Redirect to timecheck subroutine
same => n,Goto(SupportTeam,${EXTEN},1) ; Redirect to SupportTeam context for handling

; Extension for handling outbound external calls
[outgoing]
exten => _XXXXXXXX,1,Dial(SIP/outside/${EXTEN}) ; Dial external number with call recording
same => n,Hangup() ; Hang up after call

; Message Config: Handles sending messages
[message]
exten => _X.,1,MessageSend(sip:${EXTEN},${MESSAGE(from)}) ; Send SIP message to specified extension
same => n,Hangup() ; Hang up the call after sending message

; Define a recording cleanup
[record_cleanup]
exten => s,1,NoOp(Deleting old recordings) ; Log a message indicating the start of the cleanup process
same => n,System(find /var/spool/asterisk/recording/ -type f -mtime +7 -exec rm {} \;) ; Delete recordings older than 7 days
same => n,Return() ; Return control back to the dialplan
; Schedule the record cleanup context to run every day at 8:00 PM
same => n,GotoIfTime(20:00,,,*?record_cleanup,s,1)

; Define a context for call forwarding
[call_forward]
exten => _XXX.,1,Answer() ; Answer the call when it comes in
same => n,AGI(call_forward,${EXTEN}) ;Execute the AGI methode, passing the current extension number asargument
same => n,Hangup() ; Hang up the call after call forwarding or voicemail handling
